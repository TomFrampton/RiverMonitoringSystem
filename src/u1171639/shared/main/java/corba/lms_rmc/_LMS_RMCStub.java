package u1171639.shared.main.java.corba.lms_rmc;


/**
* u1171639/shared/main/java/corba/lms_rmc/_LMS_RMCStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LMS_RMC.idl
* Saturday, 18 April 2015 18:41:22 o'clock BST
*/

public class _LMS_RMCStub extends org.omg.CORBA.portable.ObjectImpl implements u1171639.shared.main.java.corba.lms_rmc.LMS_RMC
{

  public u1171639.shared.main.java.corba.models.CorbaModel_Locality getZoneUpdates ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getZoneUpdates", true);
                $in = _invoke ($out);
                u1171639.shared.main.java.corba.models.CorbaModel_Locality $result = u1171639.shared.main.java.corba.models.CorbaModel_LocalityHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getZoneUpdates (        );
            } finally {
                _releaseReply ($in);
            }
  } // getZoneUpdates

  public u1171639.shared.main.java.corba.models.CorbaModel_Log getLog ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getLog", true);
                $in = _invoke ($out);
                u1171639.shared.main.java.corba.models.CorbaModel_Log $result = u1171639.shared.main.java.corba.models.CorbaModel_LogHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getLog (        );
            } finally {
                _releaseReply ($in);
            }
  } // getLog

  public boolean activateSensor (String zoneName, String sensorName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("activateSensor", true);
                $out.write_string (zoneName);
                $out.write_string (sensorName);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return activateSensor (zoneName, sensorName        );
            } finally {
                _releaseReply ($in);
            }
  } // activateSensor

  public boolean deactivateSensor (String zoneName, String sensorName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("deactivateSensor", true);
                $out.write_string (zoneName);
                $out.write_string (sensorName);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return deactivateSensor (zoneName, sensorName        );
            } finally {
                _releaseReply ($in);
            }
  } // deactivateSensor

  public boolean setWarningThreshold (String zoneName, String sensorName, double threshold)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setWarningThreshold", true);
                $out.write_string (zoneName);
                $out.write_string (sensorName);
                $out.write_double (threshold);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return setWarningThreshold (zoneName, sensorName, threshold        );
            } finally {
                _releaseReply ($in);
            }
  } // setWarningThreshold

  public double getSensorReading (String zoneName, String sensorName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSensorReading", true);
                $out.write_string (zoneName);
                $out.write_string (sensorName);
                $in = _invoke ($out);
                double $result = $in.read_double ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getSensorReading (zoneName, sensorName        );
            } finally {
                _releaseReply ($in);
            }
  } // getSensorReading

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:lms_rmc/LMS_RMC:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _LMS_RMCStub
